name: Docker Build & Push (Reflex Export)

on:
  push:
    branches: ["main"]     # mainブランチへのpushで実行
  workflow_dispatch:       # 手動実行も可

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Python環境セットアップ ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # --- Reflexインストール ---
      - name: Install Reflex
        run: |
          if [ ! -f "requirements.txt" ]; then
            echo "エラー: requirements.txt が見つかりません。"
            echo "このスクリプトを実行する前に、Reflex プロジェクトのルートに requirements.txt を配置してください。"
            exit 1
          else
            echo "依存パッケージをインストール中..."
            pip install --upgrade pip
            pip install -r requirements.txt
          fi

      # --- Reflex Export（Zip生成） ---
      - name: Export Reflex project
        run: |
          reflex export
          echo "✅ Reflex export (frontend + backend) 完了"

      # --- Zip展開（Reflex 0.5.3対応） ---
      - name: Unzip exported build
        run: |
          mkdir -p frontend backend

          # フロントエンドZipを展開
          if [ -f frontend.zip ]; then
            unzip -o frontend.zip -d frontend
            echo "✅ frontend.zip を展開しました"
          else
            echo "⚠️ frontend.zip が見つかりません"
          fi

          # バックエンドZipを展開
          if [ -f backend.zip ]; then
            unzip -o backend.zip -d backend
            echo "✅ backend.zip を展開しました"
          else
            echo "⚠️ backend.zip が見つかりません"
          fi
          
          echo "✅ 展開完了: frontend/, backend/ が作成されました"

      # --- Dockerfile配置 ---
      - name: Copy Dockerfiles into export directories
        run: |
          cp Dockerfile_backend backend/Dockerfile
          cp Dockerfile_frontend frontend/Dockerfile
          echo "✅ Dockerfile を配置しました"

      # GitHub Container Registryへログイン
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- docker-compose build ---
      - name: Docker Compose Build
        run: |
          docker compose build
          echo "✅ docker-compose build 完了"

      # --- タグ付けしてPush ---
      - name: Tag & Push images to GHCR
        run: |
          GHCR=ghcr.io/${{ github.repository }}

          echo "🚀 タグ付けとPush開始"
          docker tag reflex-backend $GHCR/reflex-backend:latest
          docker tag reflex-frontend $GHCR/reflex-frontend:latest

          docker push $GHCR/reflex-backend:latest
          docker push $GHCR/reflex-frontend:latest
          echo "✅ GHCRへPush完了"